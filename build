#!/usr/bin/env bash
#This shell script is used to build a base Linux environment.

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
SKYBLUE='\033[0;36m'
PLAIN='\033[0m'

# Begin
clear
echo "#############################################################"
echo "# Description: Init my server's base environment.           #"
echo "# Author: wzf <spereshelde@gmail.com>                       #"
echo "#############################################################"
echo
echo "Install softwares..."

# Install base software
apt-get -y install python wget
if  [[ ! -e '/usr/bin/python' ]]; then apt-get -y install python fi
if  [[ ! -d '/etc/nginx' ]]; then apt-get -y install nginx fi
if  [[ ! -e '/usr/bin/php' ]]; then
    phpVersion=`apt-cache pkgnames php | grep ^php5$`
    #php5=`apt-cache pkgnames php | grep ^php5$`
    #php7=`apt-cache pkgnames php | grep ^php7.0$`
    if [${#phpVersion}==0]; then
        apt-get -y install php7.0 php7.0-fpm
    else
        apt-get -y install php5 php5-fpm
fi
echo '# Default server configuration
server {
listen 81 default_server;
listen [::]:81 default_server;

# SSL configuration
# listen 443 ssl default_server;
# listen [::]:443 ssl default_server;
#
# Note: You should disable gzip for SSL traffic.
# See: https://bugs.debian.org/773332
#
# Read up on ssl_ciphers to ensure a secure configuration.
# See: https://bugs.debian.org/765782
#
# Self signed certs generated by the ssl-cert package
# Don't use them in a production server!
#
# include snippets/snakeoil.conf;

root /var/www/html;

# Add index.php to the list if you are using PHP
index index.html index.htm index.nginx-debian.html;

server_name _;

location / {
# First attempt to serve request as file, then
# as directory, then fall back to displaying a 404.
try_files $uri $uri/ =404;
}

# pass PHP scripts to FastCGI server
#
location ~ \.php$ {
include snippets/fastcgi-php.conf;

# With php-fpm (or other unix sockets):
fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
#	# With php-cgi (or other tcp sockets):
#	fastcgi_pass 127.0.0.1:9000;
}

# deny access to .htaccess files, if Apache's document root
# concurs with nginx's one
#
#location ~ /\.ht {
#	deny all;
#}
}' > /etc/nginx/sites-enabled/default


