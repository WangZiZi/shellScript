#!/usr/bin/env bash
#This shell script is used to build a base Linux environment.

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
SKYBLUE='\033[0;36m'
PLAIN='\033[0m'

# Begin
clear
echo "#############################################################"
echo "# Description: Init my server's base environment.           #"
echo "# Author: wzf <spereshelde@gmail.com>                       #"
echo "#############################################################"
echo
echo "Install softwares..."

# Install base software
apt-get -y install python wget nginx
if  [[ ! -e '/usr/bin/php' ]]; then
    phpVersion=`apt-cache pkgnames php | grep ^php5$`
    #php5=`apt-cache pkgnames php | grep ^php5$`
    #php7=`apt-cache pkgnames php | grep ^php7.0$`
    if [${#phpVersion}==0]; then
        apt-get -y install php7.0 php7.0-fpm
    else
        apt-get -y install php5 php5-fpm
fi

#Enable php in nginx
rm -rf /etc/nginx/sites-enabled/
mv ./default /etc/nginx/sites-enabled/

#Restart nginx with php
service nginx restart

#Move speedTest directory to nginx home directory
mv ./speedTest /var/www/html

#Set DNS
echo "nameserver 8.8.8.8" > /etc/resolv.conf
echo "nameserver 8.8.4.4" >> /etc/resolv.conf

#Open TCP-BBR
bit=`uname -m`
#下载并安装内核
if [[ ${bit} == "x86_64" ]]; then
    wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.14/linux-image-4.14.0-041400-generic_4.14.0-041400.201711122031_amd64.deb
    dpkg -i linux-image-4.14.0-041400-generic_4.14.0-041400.201711122031_amd64.deb
else wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.14/linux-image-4.14.0-041400-generic_4.14.0-041400.201711122031_i386.deb
    dpkg -i linux-image-4.14.0-041400-generic_4.14.0-041400.201711122031_i386.deb
fi
#卸载其余内核
deb_total=`dpkg -l | grep linux-image | awk '{print $2}' | grep -v "${latest_version}" | wc -l`
for((integer = 1; integer <= ${deb_total}; integer++))
do
deb_del=`dpkg -l|grep linux-image | awk '{print $2}' | grep -v "${latest_version}" | head -${integer}`
apt-get purge -y ${deb_del}
done
/usr/sbin/update-grub
#开启BBR
sed -i '/net.core.default_qdisc/d' /etc/sysctl.conf
sed -i '/net.ipv4.tcp_congestion_control/d' /etc/sysctl.conf
echo "net.core.default_qdisc = fq" >> /etc/sysctl.conf
echo "net.ipv4.tcp_congestion_control = bbr" >> /etc/sysctl.conf
sysctl -p >/dev/null 2>&1

#Reboot VPS
reboot
